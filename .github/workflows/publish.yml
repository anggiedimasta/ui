name: Build and Publish

on:
  push:
    branches: [main]
    tags: ['v*']

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: PRODUCTION

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Setup npm authentication
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc

      - name: Debug npm config
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "NPM_TOKEN length: ${#NPM_TOKEN}"
          echo "NPM_TOKEN starts with: ${NPM_TOKEN:0:10}..."
          cat ~/.npmrc
          npm config list

      - name: Test npm auth
        if: startsWith(github.ref, 'refs/tags/')
        run: npm whoami

      - name: Publish @anggiedimasta/config
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd packages/config
          npm publish --access public

      - name: Publish @anggiedimasta/ui
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd packages/ui
          npm publish --access public

      - name: Wait for npm registry propagation
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "Waiting for npm packages to be available..."
          sleep 30
          echo "Checking if packages are available..."
          npm view @anggiedimasta/config version
          npm view @anggiedimasta/ui version

  deploy-web:
    runs-on: ubuntu-latest
    needs: build-and-publish
    environment: PRODUCTION

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.4

      - name: Clean pnpm lockfile & store
        run: |
          rm -rf node_modules pnpm-lock.yaml
          pnpm install --prefer-offline=false --frozen-lockfile

      - name: Build Nuxt app
        run: pnpm build
        working-directory: ./apps/web

      - name: Debug .output folder
        run: ls -la ./apps/web/.output || echo ".output not found"

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/web
